{
    "contents" : "source(\"rankhospital.R\")\n\nrankall <- function(outcome, num = \"best\") {\n   ## Read outcome data\n   oocm <- read.csv(\"outcome-of-care-measures.csv\", colClasses = \"character\")\n   \n   #check valid outcome\n   if (! any(c(\"heart attack\", \"heart failure\", \"pneumonia\") == outcome)) {\n      stop (\"invalid outcome\")\n   } \n   \n   allStates <- unique(oocm[[\"State\"]])\n   \n   df <- data.frame()\n   \n   outcomeCol <- 0\n   if (outcome == \"heart attack\") {\n      outcomeCol <- 11\n      oocm[, 11] <- as.numeric(oocm[, 11])\n   } else if (outcome == \"heart failure\") {\n      outcomeCol <- 17\n      oocm[, 17] <- as.numeric(oocm[, 17])\n   } else if (outcome == \"pneumonia\") {\n      outcomeCol <- 23\n      oocm[, 23] <- as.numeric(oocm[, 23])\n   }\n   \n   for (st in allStates) {\n     \n      #subset on state\n      allOutcomesInState <- subset(oocm,(oocm[7] == st))\n      #allOutcomesInState <- subset(oocm,(oocm[7] == st) & (oocm[outcomeCol] != NA))\n      \n      #rank outcomes\n      rankedOutcomesInState <- allOutcomesInState[order(allOutcomesInState[,outcomeCol],allOutcomesInState[,2],na.last=NA),]\n  \n      rank <- 0\n      if (num == \"best\") rank <- 1\n      else if (num == \"worst\") rank <- nrow(rankedOutcomesInState)\n      else rank <- as.numeric(num)\n      \n      df = rbind(df,data.frame(hospital=rankedOutcomesInState[rank,2],state=st))\n      \n   }\n   colnames(df) <- c(\"hospital\", \"state\")\n   df\n   \n}",
    "created" : 1399066241883.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1201522686",
    "id" : "9BE6D1E",
    "lastKnownWriteTime" : 1399146258,
    "path" : "D:/workspace/git-local/R/coursera/20140411-data-science/ProgrammingAssignment4/rankall.R",
    "project_path" : "rankall.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}